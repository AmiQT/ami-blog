---
export interface Props {
  post: any;
  content: any;
}

const { post, content } = Astro.props;

// Calculate reading time (average 200 words per minute)
const wordCount = content.body ? content.body.split(' ').length : 0;
const readingTime = Math.ceil(wordCount / 200);

// Format date
const formattedDate = post.data.pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Get related posts (same tags)
const { getCollection } = await import('astro:content');
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(p => p.slug !== post.slug && p.data.tags.some(tag => post.data.tags.includes(tag)))
  .slice(0, 3)
  .map(p => ({
    ...p,
    body: p.body || ''
  }));
---

<article class="max-w-4xl mx-auto">
  <!-- Article Header -->
  <header class="mb-8">
    <div class="flex items-center text-sm text-gray-500 mb-4">
      <time datetime={post.data.pubDate.toISOString()}>
        {formattedDate}
      </time>
      <span class="mx-2">•</span>
      <span>{readingTime} min read</span>
      {post.data.updatedDate && (
        <>
          <span class="mx-2">•</span>
          <span>Updated: {post.data.updatedDate.toLocaleDateString()}</span>
        </>
      )}
    </div>

    <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
      {post.data.title}
    </h1>

    <p class="text-xl text-gray-600 mb-6 leading-relaxed">
      {post.data.description}
    </p>

    <!-- Tags -->
    {post.data.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-6">
        {post.data.tags.map((tag: string) => (
          <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium hover:bg-blue-200 transition-colors">
            {tag}
          </span>
        ))}
      </div>
    )}

    <!-- Author Info -->
    <div class="flex items-center p-4 bg-gray-50 rounded-lg">
      <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold text-lg mr-4">
        AI
      </div>
      <div>
        <div class="font-semibold text-gray-900">AI Review Team</div>
        <div class="text-sm text-gray-600">Expert AI Analysts & Researchers</div>
      </div>
    </div>
  </header>

  <!-- Article Content -->
  <div class="prose prose-lg max-w-none mb-12">
    <slot />
  </div>

  <!-- Social Sharing -->
  <div class="border-t border-gray-200 pt-8 mb-12">
    <h3 class="text-lg font-semibold text-gray-900 mb-4">Share this article:</h3>
    <div class="flex space-x-4">
      <a href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post.data.title)}&url=${encodeURIComponent(Astro.url.href)}`} 
         target="_blank" 
         rel="noopener noreferrer"
         class="flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
          <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/>
        </svg>
        Share on Twitter
      </a>
      <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}`} 
         target="_blank" 
         rel="noopener noreferrer"
         class="flex items-center px-4 py-2 bg-blue-700 text-white rounded-lg hover:bg-blue-800 transition-colors">
        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
          <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
        </svg>
        Share on LinkedIn
      </a>
      <button onclick="navigator.clipboard.writeText(window.location.href)" 
              class="flex items-center px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
        </svg>
        Copy Link
      </button>
    </div>
  </div>

  <!-- Related Articles -->
  {relatedPosts.length > 0 && (
    <div class="border-t border-gray-200 pt-8">
      <h3 class="text-2xl font-bold text-gray-900 mb-6">Related Articles</h3>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        {relatedPosts.map((relatedPost) => (
          <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
            <div class="p-6">
              <h4 class="text-lg font-semibold mb-3 text-gray-900 line-clamp-2">
                <a href={`/blog/${relatedPost.slug}`} class="hover:text-blue-600 transition-colors">
                  {relatedPost.data.title}
                </a>
              </h4>
              <p class="text-gray-600 mb-4 line-clamp-3 text-sm">
                {relatedPost.data.description}
              </p>
              <div class="flex items-center text-sm text-gray-500">
                <time datetime={relatedPost.data.pubDate.toISOString()}>
                  {relatedPost.data.pubDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                  })}
                </time>
                <span class="mx-2">•</span>
                                 <span>{Math.ceil((relatedPost.body || '').split(' ').length / 200)} min read</span>
              </div>
            </div>
          </article>
        ))}
      </div>
    </div>
  )}
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Prose styles for better content readability */
  .prose {
    color: #374151;
  }
  
  .prose h2 {
    color: #111827;
    font-size: 1.875rem;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .prose h3 {
    color: #111827;
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  .prose p {
    margin-bottom: 1.25rem;
    line-height: 1.75;
  }
  
  .prose ul, .prose ol {
    margin-bottom: 1.25rem;
    padding-left: 1.5rem;
  }
  
  .prose li {
    margin-bottom: 0.5rem;
  }
  
  .prose blockquote {
    border-left: 4px solid #3b82f6;
    padding-left: 1rem;
    font-style: italic;
    color: #6b7280;
    margin: 1.5rem 0;
  }
  
  .prose code {
    background-color: #f3f4f6;
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
  }
  
  .prose pre {
    background-color: #1f2937;
    color: #f9fafb;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1.5rem 0;
  }
</style>
