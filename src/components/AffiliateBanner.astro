---
export interface Props {
  toolName: string;
  description: string;
  originalPrice: string;
  discountPrice: string;
  discountCode: string;
  affiliateLink: string;
  image?: string;
  features?: string[];
  expiryDate?: string;
}

const { 
  toolName, 
  description, 
  originalPrice, 
  discountPrice, 
  discountCode, 
  affiliateLink, 
  image = "/images/placeholder.svg",
  features = [],
  expiryDate
} = Astro.props;
---

<div class="bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-xl p-6 mb-8">
  <div class="flex flex-col lg:flex-row gap-6">
    <!-- Image -->
    <div class="lg:w-1/3">
      <img 
        src={image} 
        alt={toolName}
        class="w-full h-48 object-cover rounded-lg shadow-md"
      >
    </div>

    <!-- Content -->
    <div class="lg:w-2/3">
      <div class="flex items-start justify-between mb-4">
        <div>
          <h3 class="text-2xl font-bold text-gray-900 mb-2">{toolName}</h3>
          <p class="text-gray-600 mb-4">{description}</p>
        </div>
        <div class="text-right">
          <div class="text-sm text-gray-500 line-through">{originalPrice}</div>
          <div class="text-2xl font-bold text-green-600">{discountPrice}</div>
          <div class="text-sm text-green-600 font-medium">Limited Time Offer</div>
        </div>
      </div>

      {features.length > 0 && (
        <div class="mb-4">
          <h4 class="font-semibold text-gray-900 mb-2">Key Features:</h4>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
            {features.map((feature) => (
              <div class="flex items-center text-sm text-gray-700">
                <svg class="w-4 h-4 text-green-500 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                </svg>
                {feature}
              </div>
            ))}
          </div>
        </div>
      )}

      <div class="bg-white rounded-lg p-4 mb-4 border border-green-200">
        <div class="flex items-center justify-between">
          <div>
            <div class="text-sm text-gray-600">Use Code:</div>
            <div class="text-lg font-mono font-bold text-green-600">{discountCode}</div>
          </div>
          <div class="text-right">
            <div class="text-sm text-gray-600">Save</div>
            <div class="text-lg font-bold text-green-600">
              {(() => {
                const original = parseFloat(originalPrice.replace(/[^0-9.]/g, ''));
                const discount = parseFloat(discountPrice.replace(/[^0-9.]/g, ''));
                const savings = original - discount;
                return `$${savings.toFixed(0)}`;
              })()}
            </div>
          </div>
        </div>
      </div>

      <div class="flex flex-col sm:flex-row gap-3">
        <a 
          href={affiliateLink}
          target="_blank"
          rel="noopener noreferrer"
          class="flex-1 bg-green-600 text-white py-3 px-6 rounded-lg font-semibold text-center hover:bg-green-700 transition-colors"
        >
          Get {toolName} Now
        </a>
        <button 
          onclick="copyCode('{discountCode}')"
          class="px-6 py-3 border border-green-600 text-green-600 rounded-lg font-semibold hover:bg-green-50 transition-colors"
        >
          Copy Code
        </button>
      </div>

      {expiryDate && (
        <p class="text-sm text-gray-500 mt-3">
          ‚è∞ Offer expires: {expiryDate}
        </p>
      )}

      <p class="text-xs text-gray-500 mt-3">
        * This is an affiliate link. We may earn a commission if you make a purchase.
      </p>
    </div>
  </div>
</div>

<script>
  function copyCode(code) {
    navigator.clipboard.writeText(code).then(() => {
      // Show success message
      const button = event.target;
      const originalText = button.textContent;
      button.textContent = 'Copied!';
      button.classList.add('bg-green-100', 'text-green-700');
      
      setTimeout(() => {
        button.textContent = originalText;
        button.classList.remove('bg-green-100', 'text-green-700');
      }, 2000);
    });
  }
</script>
