---
// Expose analytics IDs via public env vars so we don't hardcode secrets
const GA_ID = import.meta.env.PUBLIC_GA_ID;
const FB_PIXEL_ID = import.meta.env.PUBLIC_FB_PIXEL_ID;
const LINKEDIN_PARTNER_ID = import.meta.env.PUBLIC_LINKEDIN_PARTNER_ID;
---

<!-- Consent Mode default: deny until user opts-in -->
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){ dataLayer.push(arguments); }
  // Default all storages to denied; CookieConsent updates this on choice
  gtag('consent', 'default', {
    'analytics_storage': 'denied',
    'ad_storage': 'denied',
    'functionality_storage': 'denied',
    'personalization_storage': 'denied',
    'security_storage': 'granted'
  });
</script>

{GA_ID && (
  <>
    <!-- Google Analytics 4 -->
    <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA_ID}`}></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);} 
      gtag('js', new Date());
      gtag('config', "{GA_ID}", {
        page_title: document.title,
        page_location: window.location.href,
        custom_map: {
          'custom_parameter_1': 'premium_content_viewed',
          'custom_parameter_2': 'article_category',
          'custom_parameter_3': 'user_engagement_level'
        }
      });
    </script>
  </>
)}

<!-- Custom Analytics Script -->
<script>
  // Track premium content interactions
  document.addEventListener('DOMContentLoaded', function() {
    // Track premium article views
    const urlParams = new URLSearchParams(window.location.search);
    const hasTempAccess = urlParams.get('premium') === 'temp2024';
    
    if (hasTempAccess) {
      if (typeof gtag !== 'undefined') gtag('event', 'premium_content_access', {
        'event_category': 'premium_content',
        'event_label': 'temporary_access',
        'value': 1
      });
    }

    // Track premium paywall views
    const paywall = document.getElementById('premium-paywall');
    if (paywall) {
      if (typeof gtag !== 'undefined') gtag('event', 'paywall_view', {
        'event_category': 'conversion',
        'event_label': 'premium_paywall_shown',
        'value': 1
      });
    }

    // Track subscription modal interactions
    const subscriptionModal = document.getElementById('homepage-modal');
    if (subscriptionModal) {
      // Track modal opens
      const observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(mutation) {
          if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
            if (!subscriptionModal.classList.contains('hidden')) {
              if (typeof gtag !== 'undefined') gtag('event', 'modal_open', {
                'event_category': 'conversion',
                'event_label': 'subscription_modal',
                'value': 1
              });
            }
          }
        });
      });
      
      observer.observe(subscriptionModal, {
        attributes: true,
        attributeFilter: ['class']
      });
    }

    // Track newsletter signups
    const newsletterForms = document.querySelectorAll('form[data-newsletter="true"]');
    newsletterForms.forEach(form => {
      form.addEventListener('submit', function(e) {
        if (typeof gtag !== 'undefined') gtag('event', 'newsletter_signup', {
          'event_category': 'conversion',
          'event_label': 'newsletter_subscription',
          'value': 1
        });
      });
    });

    // Track premium trial clicks
    const premiumButtons = document.querySelectorAll('a[href="/premium"]');
    premiumButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        if (typeof gtag !== 'undefined') gtag('event', 'premium_trial_click', {
          'event_category': 'conversion',
          'event_label': 'premium_trial_button',
          'value': 1
        });
      });
    });

    // Track article reads (scroll depth)
    let maxScroll = 0;
    window.addEventListener('scroll', function() {
      const scrollPercent = Math.round((window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100);
      if (scrollPercent > maxScroll) {
        maxScroll = scrollPercent;
        
        // Track scroll milestones
        if (maxScroll >= 25 && maxScroll < 50) {
          if (typeof gtag !== 'undefined') gtag('event', 'scroll_depth', {
            'event_category': 'engagement',
            'event_label': '25_percent',
            'value': 25
          });
        } else if (maxScroll >= 50 && maxScroll < 75) {
          if (typeof gtag !== 'undefined') gtag('event', 'scroll_depth', {
            'event_category': 'engagement',
            'event_label': '50_percent',
            'value': 50
          });
        } else if (maxScroll >= 75 && maxScroll < 100) {
          if (typeof gtag !== 'undefined') gtag('event', 'scroll_depth', {
            'event_category': 'engagement',
            'event_label': '75_percent',
            'value': 75
          });
        } else if (maxScroll >= 100) {
          if (typeof gtag !== 'undefined') gtag('event', 'scroll_depth', {
            'event_category': 'engagement',
            'event_label': '100_percent',
            'value': 100
          });
        }
      }
    });

    // Track time on page
    let startTime = Date.now();
    window.addEventListener('beforeunload', function() {
      const timeOnPage = Math.round((Date.now() - startTime) / 1000);
      if (typeof gtag !== 'undefined') gtag('event', 'time_on_page', {
        'event_category': 'engagement',
        'event_label': 'page_exit',
        'value': timeOnPage
      });
    });

    // Track search interactions
    const searchInput = document.querySelector('input[type="search"]');
    if (searchInput) {
      searchInput.addEventListener('input', function(e) {
        if (e.target.value.length >= 3) {
          if (typeof gtag !== 'undefined') gtag('event', 'search_query', {
            'event_category': 'engagement',
            'event_label': 'search_input',
            'search_term': e.target.value
          });
        }
      });
    }

    // Track category clicks
    const categoryLinks = document.querySelectorAll('a[href^="/category/"]');
    categoryLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        const category = this.href.split('/').pop();
        if (typeof gtag !== 'undefined') gtag('event', 'category_click', {
          'event_category': 'navigation',
          'event_label': category,
          'value': 1
        });
      });
    });

    // Track social sharing
    const shareButtons = document.querySelectorAll('[data-share]');
    shareButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        const platform = this.getAttribute('data-share');
        if (typeof gtag !== 'undefined') gtag('event', 'share', {
          'event_category': 'social',
          'event_label': platform,
          'value': 1
        });
      });
    });
  });

  // Enhanced Ecommerce tracking for premium subscriptions
  function trackPremiumSubscription(plan = 'monthly', value = 9.99) {
    if (typeof gtag !== 'undefined') gtag('event', 'purchase', {
      'transaction_id': 'premium_' + Date.now(),
      'value': value,
      'currency': 'USD',
      'items': [{
        'item_id': 'premium_subscription',
        'item_name': 'Premium Subscription',
        'item_category': 'subscription',
        'price': value,
        'quantity': 1
      }]
    });
  }

  // Track lead magnet downloads
  function trackLeadMagnetDownload(magnetType = 'ai_tools_guide') {
    if (typeof gtag !== 'undefined') gtag('event', 'download', {
      'event_category': 'lead_generation',
      'event_label': magnetType,
      'value': 1
    });
  }

  // Track affiliate link clicks
  function trackAffiliateClick(toolName = 'unknown') {
    if (typeof gtag !== 'undefined') gtag('event', 'affiliate_click', {
      'event_category': 'monetization',
      'event_label': toolName,
      'value': 1
    });
  }

  // Make functions globally available
  window.trackPremiumSubscription = trackPremiumSubscription;
  window.trackLeadMagnetDownload = trackLeadMagnetDownload;
  window.trackAffiliateClick = trackAffiliateClick;
</script>

<!-- Conversion Tracking Pixels (conditionally loaded if IDs provided) -->
{FB_PIXEL_ID && (
  <>
    <!-- Facebook Pixel (for retargeting) -->
    <script>
      !function(f,b,e,v,n,t,s)
      {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
      n.callMethod.apply(n,arguments):n.queue.push(arguments)};
      if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
      n.queue=[];t=b.createElement(e);t.async=!0;
      t.src=v;s=b.getElementsByTagName(e)[0];
      s.parentNode.insertBefore(t,s)}(window, document,'script',
      'https://connect.facebook.net/en_US/fbevents.js');
      fbq('init', "{FB_PIXEL_ID}");
      fbq('track', 'PageView');
    </script>
    <noscript>
      <img height="1" width="1" style="display:none" 
          src={`https://www.facebook.com/tr?id=${FB_PIXEL_ID}&ev=PageView&noscript=1`} />
    </noscript>
  </>
)}

{LINKEDIN_PARTNER_ID && (
  <>
    <!-- LinkedIn Insight Tag -->
    <script type="text/javascript">
      _linkedin_data_partner_id = "{LINKEDIN_PARTNER_ID}";
    </script>
    <script type="text/javascript">
      (function(l) {
        if (!l){window.lintrk = function(a,b){window.lintrk.q.push([a,b])};
        window.lintrk.q=[]}
        var s = document.getElementsByTagName("script")[0];
        var b = document.createElement("script");
        b.type = "text/javascript";b.async = true;
        b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";
        s.parentNode.insertBefore(b, s);})(window.lintrk);
    </script>
    <noscript>
      <img height="1" width="1" style="display:none;" alt="" src={`https://px.ads.linkedin.com/collect/?pid=${LINKEDIN_PARTNER_ID}&fmt=gif`} />
    </noscript>
  </>
)}
